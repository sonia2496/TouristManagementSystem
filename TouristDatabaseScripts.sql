CREATE TABLE Roles(
    RoleID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RoleName VARCHAR2(50) NOT NULL
);

CREATE TABLE Users (
    UserID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserName VARCHAR2(50) NOT NULL,
    PasswordHash VARCHAR2(255) NOT NULL,
    RoleID NUMBER,
    CONSTRAINT FK_UserRole FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);

CREATE TABLE Sites (
    SiteID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SiteName VARCHAR2(100) NOT NULL,
    Description VARCHAR2(255),
    Location VARCHAR2(100),
    Availability CHAR(1) CHECK (Availability IN ('Y', 'N')) NOT NULL,
    AvailableFrom DATE
);

CREATE TABLE Reservations (
    ReservationID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SiteID NUMBER,
    ReservationDate DATE NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    CONSTRAINT FK_ReservationSite FOREIGN KEY (SiteID) REFERENCES Sites(SiteID),
    CONSTRAINT CHK_DateRange CHECK (EndDate >= StartDate),
    Username VARCHAR2(100) NOT NULL
);

CREATE TABLE PaymentHistory (
    PaymentID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Username VARCHAR2(100) NOT NULL,
    Amount NUMBER(10, 2) NOT NULL,
    PaymentDate DATE NOT NULL,
    Status VARCHAR2(50) NOT NULL,
    SiteName VARCHAR2(100)
);


select * from Roles;

select * from Users;

select * from Reservations;

select * from Sites;

select * from PaymentHistory;

INSERT INTO Roles (RoleName) VALUES ('Admin');
INSERT INTO Roles (RoleName) VALUES ('Tourist');